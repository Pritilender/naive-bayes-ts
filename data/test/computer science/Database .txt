computer science	database databases navigation search database organized collection data the data are typically organized model aspects reality way that supports processes requiring this for modelling the availability rooms hotels way that supports finding hotel with database management systems dbms are specially designed software applications that interact with the other and the database itself capture and analyze purpose dbms software system designed allow the creation querying update and administration well known dbmss include mysql mariadb postgresql sqlite microsoft sql server oracle sap hana dbase foxpro ibm libreoffice base filemaker pro microsoft access and intersystems database not generally portable across different but different dbmss can interoperate using standards such sql and odbc jdbc allow single application work with more than one there are different types some them are operational specific external hypermedia contents terminology and overview applications general purpose and purpose dbmss history navigational dbms relational dbms integrated approach late sql dbms the desktop object oriented nosql and newsql research examples design and modeling models external conceptual and internal views languages performance security and availability storage materialized views replication security transactions and concurrency migration building maintaining and tuning backup and restore other see also references further reading external links terminology and overview formally database refers the data themselves and supporting data databases are created operate large quantities information storing retrieving and managing that databases are set that one set software programs provides all users with access all the database management suite computer software providing the interface between users and database because they are closely the term database when used casually often refers both dbms and the data outside the world professional information technology the term database sometimes used casually refer any collection data perhaps spreadsheet maybe even card this article concerned only with databases where the size and usage requirements necessitate use database management the interactions catered for most existing dbmss fall into four main data definition defining new data structures for removing data structures from the modifying the structure existing update inserting modifying and deleting retrieval obtaining information either for user queries and reports for processing administration registering and monitoring enforcing data monitoring maintaining data dealing with concurrency and recovering information the system dbms responsible for maintaining the integrity and security stored and for recovering information the system both database and its dbms conform the principles particular database model database refers collectively the database database management and physically database servers are dedicated computers that hold the actual databases and run only the dbms and related database servers are usually multiprocessor computers with generous memory and raid disk arrays used for stable raid used for recovery data any the disks hardware database connected one more servers via speed are also used large volume transaction processing dbmss are found the heart most database applications dbmss may built around custom multitasking kernel with networking support but modern dbmss typically rely standard operating system provide these citation needed since dbmss comprise significant economical market computer and storage vendors often take into account dbms requirements their own development citation needed databases and dbmss can categorized according the database that they support such relational the computer they run from server cluster mobile the query language used access the database such sql xquery and their internal which affects scalability resilience and applications this section does not cite any references sources please help improve this section adding citations reliable sources unsourced material may challenged and removed march databases are used support internal operations organizations and underpin online interactions with customers and suppliers see enterprise software databases are used hold administrative information and more specialized such engineering data economic examples database applications include computerized library systems flight reservation systems and computerized parts inventory systems general purpose and purpose dbmss dbms has evolved into complex software system and its development typically requires thousands years development some purpose dbmss such adabas oracle and have been undergoing upgrades since the general purpose dbmss aim meet the needs many applications which adds the however the fact that their development cost can spread over large number users means that they are often the most effective however purpose dbms not always the optimal some cases purpose dbms may introduce unnecessary therefore there are many examples systems that use purpose common example email system email systems are designed optimize the handling email and not need significant portions purpose dbms many databases have application software that accesses the database behalf without exposing the dbms interface application programmers may use wire protocol directly more likely through application programming interface database designers and database administrators interact with the dbms through dedicated interfaces build and maintain the databases and thus need some more knowledge and understanding about how dbmss operate and the external interfaces and tuning history following the technology progress the areas processors computer memory computer storage and computer networks the capabilities and performance databases and their respective dbmss have grown orders the development database technology can divided into three eras based data model navigational sql relational and the two main early navigational data models were the hierarchical model epitomized ims and the codasyl model network model implemented number products such idms the relational model first proposed edgar codd departed from this tradition insisting that applications should search for data rather than following the relational model employs sets style each used for different type only the did computing hardware became powerful enough allow the wide deployment relational systems dbmss plus the early however relational systems dominated all scale data processing and they remain dominant except niche the dominant database standardised sql for the relational has influenced database languages for other data citation needed object databases developed the overcome the inconvenience object relational impedance mismatch which led the coining the term and also the development hybrid object relational databases the next generation relational databases the late became known nosql databases introducing fast key value stores and document oriented databases competing next known newsql databases attempted new implementations that retained the sql model while aiming match the high performance nosql compared commercially available relational navigational dbms codasyl navigational database the introduction the term database coincided with the availability access storage disks and from the the term represented contrast with the based systems the allowing shared interactive use rather than daily batch processing the oxford english dictionary cites report the system development corporation california the first use the term specific technical computers grew speed and number purpose database systems the number such systems had come into commercial interest standard began and charles bachman author one such the integrated data store founded the database task within codasyl the group responsible for the creation and standardization cobol the database task group delivered their which generally became known the codasyl and soon number commercial products based this approach entered the the codasyl approach relied the manual navigation linked data set which was formed into large applications could find records one three use primary key known calc typically implemented navigating relationships called from one record another scanning all the records sequential later systems added trees provide alternate access many codasyl databases also added very straightforward query however the final codasyl was very complex and required significant training and effort produce useful ibm also had their own dbms known ims ims was development software written for the apollo program the system ims was generally similar concept but used strict hierarchy for its model data navigation instead network both concepts later became known navigational databases due the way data was and turing award presentation was the programmer navigator ims classified hierarchical database idms and cincom systems total database are classified network ims remains use relational dbms edgar codd worked ibm san california one their offshoot offices that was primarily involved the development hard disk systems was unhappy with the navigational model the codasyl notably the lack search facility wrote number papers that outlined new approach database construction that eventually culminated the groundbreaking relational model data for large shared data banks this described new system for storing and working with large instead records being stored some sort linked list form records codd idea was use table length with each table used for different type list system would very inefficient when storing sparse databases where some the data for any one record could left the relational model solved this splitting the data into series normalized tables relations with optional elements being moved out the main table where they would take room only data may freely deleted and edited these with the dbms doing whatever maintenance needed present table view the relational model the relational model also allowed the content the database evolve without constant rewriting links and the relational part comes from entities referencing other entities what known many like traditional hierarchical and many like navigational model thus relational model can express both hierarchical and navigational well its native tabular allowing for pure combined modeling terms these three the application for common use database system track information about their login various addresses and phone the navigational approach all these data would placed single and unused items would simply not placed the the relational the data would normalized into user address table and phone number table for records would created these optional tables only the address phone numbers were actually linking the information back together the key this the relational some bit information was used key uniquely defining particular when information was being collected about information stored the optional tables would found searching for this for the login name user addresses and phone numbers for that user would recorded with the login name its this simple related data back into single collection something that traditional computer languages are not designed just the navigational approach would require programs loop order collect the relational approach would require loops collect information about any one record codd solution the necessary looping was oriented suggestion that would later spawn the ubiquitous using branch mathematics known tuple calculus demonstrated that such system could support all the operations normal databases updating well providing simple system for finding and returning sets data single codd paper was picked two people eugene wong and michael stonebraker they started project known ingres using funding that had already been allocated for geographical database project and student programmers produce beginning ingres delivered its first test products which were generally ready for widespread use ingres was similar system number including the use language for data known quel over ingres moved the emerging sql ibm itself did one test implementation the relational prtv and production business system both now honeywell wrote mrds for multics and now there are two new alphora dataphor and rel most other dbms implementations usually called relational are actually sql the university michigan began development the micro information management system based childs set theoretic data micro was used manage very large data sets the department labor the environmental protection agency and researchers from the university alberta the university michigan and wayne state university ran ibm mainframe computers using the michigan terminal system the system remained production until integrated approach database machine the and attempts were made build database systems with integrated hardware and the underlying philosophy was that such integration would provide higher performance lower examples were ibm system the early offering teradata and the britton inc database another approach hardware support for database management was icl cafs accelerator hardware disk controller with programmable search the long these efforts were generally unsuccessful because specialized database machines could not keep pace with the rapid development and progress purpose thus most database systems nowadays are software systems running purpose using purpose computer data however this idea still pursued for certain applications some companies like netezza and oracle exadata late sql dbms ibm started working prototype system loosely based concepts system the early the first version was ready and work then started table systems which the data could split that all the data for record some which did not have stored single large chunk subsequent user versions were tested customers and which time standardized query language sql citation needed had been codd ideas were establishing themselves both workable and superior pushing ibm develop true production version system known sql and later database larry ellison oracle started from different based papers system and beat ibm market when the first version was released citation needed stonebraker went apply the lessons from ingres develop new postgres which now known postgresql often used for global mission critical applications the org and info domain name registries use their primary data many large companies and financial codd paper was also read and mimer sql was developed from the uppsala university this project was consolidated into independent the early mimer introduced transaction handling for high robustness idea that was subsequently implemented most other another data the entity relationship model emerged and gained popularity for database design emphasized more familiar description than the earlier relational later entity relationship constructs were retrofitted data modeling construct for the relational and the difference between the two have become citation needed the desktop the ushered the age desktop computing the new computers empowered their users with spreadsheets like lotus and database software like the dbase product was lightweight and easy for any computer user understand out the wayne ratliff the creator dbase dbase was different from programs like fortran and cobol that lot the dirty work had already been the data manipulation done dbase instead the the user can concentrate what rather than having mess with the dirty details reading and closing and managing space dbase was one the top selling software titles the and early object oriented the along with rise object oriented programming saw growth how data various databases were programmers and designers began treat the data their databases that say that data were that such their phone and were now considered belong that person instead being extraneous this allows for relations between data relations objects and their attributes and not individual the term relational impedance described the inconvenience translating between programmed objects and database object databases and relational databases attempt solve this problem providing oriented language sometimes extensions that programmers can use alternative purely relational the programming libraries known object relational mappings attempt solve the same nosql and newsql nosql newsql the next generation relational databases the became known nosql including fast value stores and oriented xml databases are type structured oriented database that allows querying based xml document xml databases are mostly used enterprise database management where xml being used the machine data interoperability xml databases are mostly commercial software that include clusterpoint marklogic and oracle xml nosql databases are often very not require fixed table avoid join operations storing denormalized data and are designed scale horizontally the most popular nosql systems include mongodb couchbase riak memcached redis couchdb hazelcast apache cassandra and hbase which are all open source software products recent years there was high demand for massively distributed databases with high partition tolerance but according the cap theorem impossible for distributed system simultaneously provide consistency availability and partition tolerance guarantees distributed system can satisfy any two these guarantees the same but not all for that reason many nosql databases are using what called eventual consistency provide both availability and partition tolerance guarantees with maximum level data newsql class modern relational databases that aims provide the same scalable performance nosql systems for online transaction processing workloads while still using sql and maintaining the acid guarantees traditional database such databases include clustrix enterprisedb nuodb and voltdb research database technology has been active research topic since the both academia and the research and development groups companies for example ibm research research activity includes theory and development prototypes notable research topics have included models the atomic transaction concept and related concurrency control techniques query languages and query optimization methods raid and the database research area has several dedicated academic journals for acm transactions database systems data and knowledge engineering and annual conferences acm sigmod acm pods vldb ieee icde examples one way classify databases involves the type their for bibliographic document statistical multimedia another way their application for accounting music movies banking manufacturing third way some technical such the database structure interface this section lists few the adjectives used characterize different kinds memory database database that primarily resides main memory but typically volatile computer data main memory databases are faster than disk and are often used where response time such telecommunications network sap hana platform very hot topic for memory may hana was able run servers with main memory powered the founder the company claimed that the system was big enough run the largest sap active database includes driven architecture which can respond conditions both inside and outside the possible uses include security alerting statistics gathering and many databases provide active database features the form database triggers cloud database relies cloud technology both the database and most its dbms reside the while its applications are both developed programmers and later maintained and utilized end users through web browser and open apis data warehouses archive data from operational databases and often from external sources such market research the warehouse becomes the central source data for use managers and other users who may not have access operational for sales data might aggregated weekly totals and converted from internal product codes use upcs that they can compared with acnielsen data some basic and essential components data warehousing include analyzing and mining data transforming loading and managing data make them available for further deductive database combines logic programming with relational for example using the datalog language distributed database one which both the data and the dbms span multiple oriented database designed for retrieving and managing semi structured information document oriented databases are one the main categories nosql embedded database system dbms which tightly integrated with application software that requires access stored data such way that the dbms hidden from the users and requires little ongoing end user databases consist data developed individual examples these are collections spreadsheets presentations multimedia and other several products exist support such some them are much simpler than full fledged with more elementary dbms federated database system comprises several distinct each with its own handled single database federated database management system which transparently integrates multiple autonomous possibly different types which case would also heterogeneous database system and provides them with integrated conceptual sometimes the term multi database used synonym federated though may refer less integrated without fdbms and managed integrated group databases that cooperate single this case typically middleware used for which typically includes atomic commit protocol the two phase commit protocol allow distributed transactions across the participating graph database kind nosql database that uses graph structures with edges and properties represent and store general graph databases that can store any graph are distinct from specialized graph databases such triplestores and network databases hypertext hypermedia database any word piece text representing another piece can hyperlinked that hypertext databases are particularly useful for organizing large amounts disparate for they are useful for organizing online encyclopedias where users can conveniently jump around the the world wide web thus large distributed hypertext knowledge base abbreviated special kind database for knowledge management providing the means for the computerized organization and retrieval knowledge also collection data representing problems with their solutions and related mobile database can carried synchronized from mobile computing device operational databases store detailed data about the operations they typically process relatively high volumes updates using transactions examples include customer databases that record credit and demographic information about customers personnel databases that hold information such benefits skills data about enterprise resource planning systems that record details about product parts and financial databases that keep track the accounting and financial parallel database seeks improve performance through parallelization for tasks such loading building indexes and evaluating hardware shared memory architecture where multiple processors share the main memory well other data shared disk architecture where each processing unit typically consisting multiple has its own main but all units share the other shared nothing architecture where each processing unit has its own main memory and other probabilistic databases employ fuzzy logic draw inferences from imprecise real time databases process transactions fast enough for the result come back and acted right spatial database can store the data with multidimensional the queries such data include location based like where the closest hotel temporal database has time for example temporal data model and temporal version more specifically the temporal aspects usually include time and terminology oriented database builds upon object oriented database often customized for specific unstructured data database intended store manageable and protected way diverse objects that not fit naturally and conveniently common may include email documents journals multimedia etc the name may misleading since some objects can highly however the entire possible object collection does not fit into predefined structured most established dbmss now support unstructured data various and new dedicated dbmss are design and modeling database design the first task database designer produce conceptual data model that reflects the structure the information held the common approach this develop relationship often with the aid drawing another popular approach the unified modeling language successful data model will accurately reflect the possible state the external world being for people can have more than one phone will allow this information designing good conceptual data model requires good understanding the application typically involves asking deep questions about the things interest like can customer also product sold with two different forms are those the same product different plane flies from new york dubai via that one flight two maybe even the answers these questions establish definitions the terminology used for entities products flights flight and their relationships and producing the conceptual data model sometimes involves input from business processes the analysis workflow the this can help establish what information needed the and what can left for can help when deciding whether the database needs hold historic data well current having produced conceptual data model that users are happy the next stage translate this into schema that implements the relevant data structures within the this process often called logical database and the output logical data model expressed the form whereas the conceptual data model theory independent the choice database the logical data model will expressed terms particular database model supported the chosen the terms data model and database model are often used but this article use data model for the design specific and database model for the modelling notation used express that the most popular database model for purpose databases the relational more the relational model represented the sql the process creating logical database design using this model uses methodical approach known normalization the goal normalization ensure that each elementary fact only recorded one that updates and deletions automatically maintain the final stage database design make the decisions that affect scalability recovery security and the this often called physical database design key goal during this stage data independence meaning that the decisions made for performance optimization purposes should invisible users and physical design driven mainly performance and requires good knowledge the expected workload and access and deep understanding the features offered the chosen another aspect physical database design involves both defining access control database objects well defining security levels and methods for the data models database model database model type data model that determines the logical structure database and fundamentally determines which manner data can organized and the most popular example database model the relational model the sql approximation which uses based common logical data models for databases hierarchical database model network model relational model relationship model enhanced relationship model object model document model value model star schema relational database combines the two related physical data models include inverted index flat file other models associative model multidimensional model multivalue model semantic model xml database named graph conceptual and internal views database management system provides three views the database the external level defines how each group users sees the organization data the single database can have any number views the external the conceptual level unifies the various external views into compatible global provides the synthesis all the external out the scope the various database and rather interest database application developers and database the internal level physical level the internal organization data inside dbms see implementation section concerned with performance scalability and other operational deals with storage layout the using storage structures such indexes enhance occasionally stores data individual views materialized views computed from generic performance justification exists for such balances all the external performance possibly attempt optimize overall performance across all while there typically only one conceptual and physical view the there can any number different external this allows users see database information more related way rather than from processing for financial department company needs the payment details all employees part the but does not need details about employees that are the interest the human resources department thus different departments need different views the the level database architecture relates the concept data independence which was one the major initial driving forces the relational the idea that changes made certain level not affect the view higher for changes the internal level not affect application programs written using conceptual level which reduces the impact making physical changes improve the conceptual view provides level indirection between internal and one hand provides common view the independent different external view and the other hand abstracts away details how the data stored managed internal principle every and even every external can presented different data practice usually given dbms uses the same data model for both the external and the conceptual levels relational the internal which hidden inside the dbms and depends its implementation see implementation section requires different level detail and uses its own types data structure separating the external conceptual and internal levels was major feature the relational database model implementations that dominate century languages database languages are purpose which one more the data definition language defines data types and the relationships among them data manipulation language performs tasks such updating deleting data occurrences query language allows searching for information and computing derived information database languages are specific particular data notable examples sql combines the roles data data and query single was one the first commercial languages for the relational although departs some respects from the relational model described codd for the rows and columns table can sql became standard the american national standards institute and the international organization for standardization the standards have been regularly enhanced since and supported with varying degrees all mainstream commercial relational oql object model language standard from the object data management group has influenced the design some the newer query languages like jdoql and ejb xquery standard xml query language implemented xml database systems such marklogic and exist relational databases with xml capability such oracle and and also memory xml processors such saxon sql xml combines xquery with database language may also incorporate features dbms specific configuration and storage engine management computations modify query like summing averaging sorting grouping and referencing constraint enforcement automotive only allowing one engine type per application programming interface version the query for programmer convenience security and availability because the critical importance database technology the smooth running database systems include complex mechanisms deliver the required security and and allow database administrators control the use these storage computer data storage database engine database storage the container the physical materialization comprises the internal level the database also contains all the information needed metadata data about the and internal data structures reconstruct the conceptual level and external level from the internal level when putting data into permanent storage generally the responsibility the database engine storage though typically accessed dbms through the underlying operating system and often utilizing the operating file systems intermediates for storage storage properties and configuration setting are extremely important for the efficient operation the and thus are closely maintained database while always has its database residing several types storage memory and external the database data and the additional needed possibly very large are coded into data typically reside the storage structures that look completely different from the way the data look the conceptual and external but ways that attempt optimize the best these reconstruction when needed users and well for computing additional types needed information from the data when querying the some dbmss support specifying which character encoding was used store multiple encodings can used the same various level database storage structures are used the storage engine serialize the data model can written the medium techniques such indexing may used improve conventional storage but there are also column oriented and correlation databases materialized views materialized view often storage redundancy employed increase common example storing materialized views which consist frequently needed external views query storing such views saves the expensive computing them each time they are the downsides materialized views are the overhead incurred when updating them keep them synchronized with their original updated database and the cost storage replication database replication occasionally database employs storage redundancy database objects replication with one more increase data availability both improve performance simultaneous multiple user accesses same database and provide resiliency case partial failure distributed updates replicated object need synchronized across the object many cases the entire database security the following text needs harmonized with text database security database security database security deals with all various aspects protecting the database its and its ranges from protection from intentional unauthorized database uses unintentional database accesses unauthorized entities person computer database access control deals with controlling who person certain computer allowed access what information the the information may comprise specific database objects record specific data certain computations over certain objects query specific utilizing specific access paths the former using specific indexes other data structures access database access controls are set special authorized the database personnel that uses dedicated protected security dbms this may managed directly individual the assignment individuals and privileges the most elaborate through the assignment individuals and groups roles which are then granted data security prevents unauthorized users from viewing updating the using users are allowed access the entire database subsets called subschemas for employee database can contain all the data about individual but one group users may authorized view only payroll while others are allowed access only work history and medical the dbms provides way interactively enter and update the well interrogate this capability allows for managing personal data security general deals with protecting specific chunks both physically from see physical security the interpretation parts them meaningful information looking the strings bits that they concluding specific valid card see data encryption change and access logging records who accessed which what was and when was logging services allow for forensic database audit later keeping record access occurrences and sometimes level code used record changes rather than leaving this the monitoring can set attempt detect security transactions and concurrency database transactions can used introduce some level fault tolerance and data integrity after recovery from crash database transaction unit typically encapsulating number operations over database reading database writing acquiring lock etc abstraction supported database and also other each transaction has well defined boundaries terms which code executions are included that transaction determined the programmer via special transaction the acronym acid describes some ideal properties database atomicity consistency isolation and durability concurrency control migration see also section database migration article data migration database built with one dbms not portable another dbms the other dbms cannot run however some situations desirable migrate database from one dbms the reasons are primarily economical different dbmss may have different total costs ownership functional and operational different dbmss may have different the migration involves the transformation from one dbms type the transformation should maintain the database related application all related application intact thus the conceptual and external architectural levels should maintained the may desired that also some aspects the architecture internal level are complex large database migration may complicated and costly project which should factored into the decision this spite the fact that tools may exist help migration between specific typically dbms vendor provides tools help importing databases from other popular building maintaining and tuning database tuning after designing database for the next stage building the typically appropriate general purpose dbms can selected utilized for this dbms provides the needed user interfaces utilized database administrators define the needed data structures within the respective data other user interfaces are used select needed dbms parameters like security storage allocation etc when the database ready all its data structures and other needed components are typically populated with initial data database which typically distinct many cases using specialized dbms interfaces that support bulk before making some cases the database becomes operational while empty application and data accumulated during its after the database initialised and populated needs various database parameters may need changing and the database may need tuned tuning for better application data structures may changed new related application programs may written add the etc backup and restore backup sometimes desired bring database back previous state for many cases when the database found corrupted due software has been updated with erroneous achieve this backup operation done occasionally where each desired database state the values its data and their embedding data kept within dedicated backup files many techniques exist this when this state when decided database administrator bring the database back this state specifying this state desired point time when the database was this these files are utilized restore that other other dbms features might database logs graphics component for producing graphs and especially data warehouse system query optimizer performs query optimization every query choose for the most efficient query plan partial order executed compute the query may specific particular storage tools hooks for database application application program database performance analysis and database configuration dbms hardware configuration dbms and related database may span networks and storage and related database mapping especially for distributed storage allocation and database layout storage etc see also book databases comparison database tools comparison object database management systems comparison relational database management systems comparison relational database management systems data access data hierarchy data store data warehouse database testing centric architecture metadata focused dataset 