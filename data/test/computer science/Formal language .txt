computer science	formal language navigation search mathematics computer science grammar framework register historical example mathematics computer science and linguistics formal language set strings symbols that may constrained rules that are specific the alphabet formal language the set letters tokens from which the strings the language may frequently required finite the strings formed from this alphabet are called and the words that belong particular formal language are sometimes called well formed words well formed formulas formal language often defined means formal grammar such regular grammar context free grammar also called its formation rule the field formal language theory studies primarily the purely syntactical aspects such that their internal structural formal language theory sprang out way understanding the syntactic regularities natural languages computer formal languages are used among others the basis for defining the grammar programming languages and formalized versions subsets natural languages which the words the language represent concepts that are associated with particular meanings semantics computational complexity theory decision problems are typically defined formal and complexity classes are defined the sets the formal languages that can parsed machines with limited computational logic and the foundations mathematics formal languages are used represent the syntax axiomatic systems and mathematical formalism the philosophy that all mathematics can reduced the syntactic manipulation formal languages this contents history words over alphabet definition examples constructions language specification formalisms operations languages applications programming languages formal systems and proofs interpretations and models see also references citation footnotes general references external links history this section requires expansion april the first formal language thought the one used gottlob frege his begriffsschrift literally meaning concept and which frege described formal language pure axel thue early semi thue system which can used for rewriting strings was influential formal grammars words over alphabet alphabet the context formal can any set although often makes sense use alphabet the usual sense the more generally character set such ascii unicode alphabets can also first order logic often expressed using alphabet besides symbols such and contains infinitely many elements that play the role the elements alphabet are called its letters word over alphabet can any finite string characters which sometimes may include and are separated specified word separation the set all words over alphabet usually denoted using the kleene star the length word the number characters letters composed for any alphabet there only one word length the empty word which often denoted concatenation one can combine two words form new whose length the sum the lengths the original the result concatenating word with the empty word the original some especially logic the alphabet also known the vocabulary and words are known formulas sentences this breaks the word metaphor and replaces sentence definition formal language over alphabet subset that set words over that sometimes the sets words are grouped into whereas rules and constraints may formulated for the creation formed computer science and which not usually deal with natural languages the adjective formal often omitted while formal language theory usually concerns itself with formal languages that are described some syntactical the actual definition the concept formal only possibly set length strings composed from given more nor there are many languages that can described such regular languages context free languages the notion formal grammar may closer the intuitive concept one described syntactic abuse the particular formal language often thought being equipped with formal grammar that describes examples the following rules describe formal over the alphabet every nonempty string that does not contain and does not start with the string string containing and only there exactly one and separates two valid strings string containing but not and only every the string separates two valid strings string other than those implied the previous under these the string but the string this formal language expresses natural numbers well formed addition and formed addition but expresses only what they look like their syntax not what they mean semantics for nowhere these rules there any indication that means the number that means constructions for finite languages one can explicitly enumerate all formed for can describe just cba the degenerate case this construction the empty language which contains words all however even over finite alphabet such there are infinitely many abb ababba aaababbbbaab therefore formal languages are typically and describing infinite formal language not simple writing cba here are some examples formal the set all words over where ranges over the natural numbers and means repeated times this the set words consisting only the symbol the set syntactically correct programs given programming language the syntax which usually defined context free grammar the set inputs upon which certain turing machine halts the set maximal strings alphanumeric ascii characters this the set the set maximal strings alphanumeric ascii characters this line language specification formalisms formal language theory rarely concerns itself with particular languages except but mainly concerned with the study various types formalisms describe for language can given those strings generated some formal grammar those strings described matched particular regular expression those strings accepted some automaton such turing machine finite state automaton those strings for which some decision procedure algorithm that asks sequence related produces the answer typical questions asked about such formalisms what their expressive can formalism describe every language that formalism can can describe other what their how difficult decide whether given word belongs language described formalism what their how difficult decide whether two one described formalism and one formalism again are actually the same surprisingly the answer these decision problems cannot done extremely with characterization how therefore formal language theory major application area computability theory and complexity theory formal languages may classified the chomsky hierarchy based the expressive power their generative grammar well the complexity their recognizing automaton context free grammars and regular grammars provide good compromise between expressivity and ease parsing and are widely used practical operations languages certain operations languages are this includes the standard set such intersection and another class operation the wise application string examples suppose and are languages over some common the concatenation consists all strings the form where string from and string from the intersection and consists all strings which are contained both languages the complement language with respect given alphabet consists all strings over the alphabet that are not the the kleene star the language consisting all words that are concatenations more words the original reversal let the empty then and for each empty word over some let then for formal language string homomorphism such string operations are used investigate closure properties classes class languages closed under particular operation when the applied languages the always produces language the same class for the context free languages are known closed under concatenation and intersection with regular languages but not closed under intersection the theory trios and abstract families languages studies the most common closure properties language families their own dcfl cfl ind csl recursive union intersection complement concatenation regular language applications programming languages syntax programming compiler compiler compiler usually has two distinct lexical analyzer generated tool like identifies the tokens the programming language identifiers keywords which are themselves expressed simpler formal usually means regular expressions the most basic conceptual parser usually generated parser generator like yacc attempts decide the source program that belongs the programming language for which the compiler was compilers more than just parse the source they usually translate into some executable because parser usually outputs more than typically abstract syntax tree which used subsequent stages the compiler eventually generate executable containing machine code that runs directly the some intermediate code that requires virtual machine formal systems and proofs syntactic formal system strings symbols formed formulas theorems theory mathematical formal system mathematical logic formal theory set sentences expressed formal formal system also called logical calculus logical system consists formal language together with deductive apparatus also called deductive system the deductive apparatus may consist set transformation rules which may interpreted valid rules inference set axioms have formal system used derive one expression from one more other although formal language can identified with its formal system cannot likewise identified its two formal systems and may have all the same theorems and yet differ some significant theoretic way formula may syntactic consequence formula one but not another for formal proof derivation finite sequence formed formulas which may interpreted propositions each which axiom follows from the preceding formulas the sequence rule inference the last sentence the sequence theorem formal formal proofs are useful because their theorems can interpreted true interpretations and models formal semantics interpretation model theory formal languages are entirely syntactic nature but may given semantics that give meaning the elements the for mathematical logic the set possible formulas particular logic formal and interpretation assigns meaning each the truth value the study interpretations formal languages called formal semantics mathematical this often done terms model theory model the terms that occur formula are interpreted mathematical structures and fixed compositional interpretation rules determine how the truth value the formula can derived from the interpretation its model for formula interpretation terms such that the formula becomes see also combinatorics words grammar framework formal method mathematical notation associative array string computer 