computer science	data structure data structures navigation search hash table computer science data structure particular way organizing data computer that can used efficiently different kinds data structures are suited different kinds and some are highly specialized specific for trees are particularly suited for implementation while compiler implementations usually use hash tables look data structures provide means manage large amounts data such large databases and internet indexing services usually efficient data structures are key designing efficient algorithms some formal design methods and programming languages emphasize data rather than the key organizing factor software storing and retrieving can carried out data stored both main memory and secondary memory contents overview basic principles language support see also references further reading external links overview there are numerous types data array number elements specific they are accessed using integer specify which element required although the elements may almost any typical implementations allocate contiguous memory words for the elements arrays but this not always arrays may length records also called tuples structs are among the simplest data record value that contains other typically fixed number and sequence and typically indexed the elements records are usually called fields members hash table also called dictionary map more flexible variation which name value pairs can added and deleted union type specifies which number permitted primitive types may stored its float long contrast with record which could defined contain float and whereas there only one value enough space allocated contain the widest member tagged union also called variant variant record discriminated union disjoint union contains additional field indicating its current for enhanced type set abstract data structure that can store specific without any particular order and with repeated values themselves are not retrieved from rather one tests value for membership obtain boolean not graphs and trees are linked abstract data structures composed nodes each node contains value and also one more pointers other graphs can used represent while variants trees can used for sorting and searching having their nodes arranged some relative order based their object contains data like and also contains program code fragments for accessing modifying those data structures not containing like those are called plain old data structures many others are but they tend further variations and compounds the above listed basic principles data structures are generally based the ability computer fetch and store data any place its specified bit string that can itself stored memory and manipulated the thus the array and record data structures are based computing the addresses data items with arithmetic operations while the linked data structures are based storing addresses data items within the structure many data structures use both sometimes combined trivial ways xor linking the implementation data structure usually requires writing set procedures that create and manipulate instances that the efficiency data structure cannot analyzed separately from those this observation motivates the theoretical concept abstract data type data structure that defined indirectly the operations that may performed and the mathematical properties those operations including their space and time language support most assembly languages and some level such bcpl basic combined programming lack support for data the other many high level programming languages and some level assembly such masm have special syntax other support for certain data such records and for the and pascal languages support structs and respectively addition vectors dimensional arrays and dimensional most programming languages feature some sort library mechanism that allows data structure implementations reused different modern languages usually come with standard libraries that implement the most common data examples are the standard template library the java collections framework and microsoft net framework modern languages also generally support modular programming the separation between the interface library module and its some provide opaque data types that allow clients hide implementation object oriented programming languages such java and smalltalk may use classes for this many known data structures have concurrent versions that allow multiple computing threads access the data structure see also book data structures list data structures plain old data structure concurrent data structure data model dynamization linked data structure persistent data structure types data structure 