computer science
expert system navigation search symbolics space cadet artificial intelligence expert system computer system that emulates the making ability human expert systems are designed solve complex problems reasoning about represented primarily then rules rather than through conventional procedural code the first expert systems were created the and then proliferated the expert systems were among the first truly successful forms software expert system divided into two the inference engine and the knowledge base the knowledge base represents facts and the inference engine applies the rules the known facts deduce new inference engines can also include explanation and debugging contents history software architecture advantages disadvantages applications see also references external links history edward feigenbaum paper said that the key insight early expert systems was that intelligent systems derive their power from the knowledge they possess rather than from the specific formalisms and inference schemes they paraphrased although this seems rather straightforward was significant step forward the until research had been focused attempts develop very purpose problem solvers such those described newell and simon expert systems were introduced the stanford heuristic programming project led who sometimes referred the father expert the stanford researchers tried identify domains where expertise was highly valued and such diagnosing infectious diseases mycin and identifying unknown organic molecules dendral addition feigenbaum key early contributors were edward shortliffe bruce and randall expert systems were among the first truly successful forms software research expert systems was also active the the focus tended based first systems hard coded top lisp programming environments and then expert system shells developed vendors such intellicorp france research focused more systems developed prolog the advantage expert system shells was that they were somewhat easier for programmers the advantage prolog environments was that they focused only then prolog environments provided much fuller realization complete first order logic environment the expert systems universities offered expert system courses and two thirds the fortune companies applied the technology daily business interest was international with the fifth generation computer systems project japan and increased research funding the first ibm was with the dos operating the imbalance between the relatively powerful chips the highly affordable compared the much more expensive price processing power the mainframes that dominated the corporate world the time created whole new type architecture for corporate computing known the client server model calculations and reasoning could performed fraction the price mainframe using this model also enabled business units bypass corporate departments and directly build their own result client server had tremendous impact the expert systems expert systems were already outliers much the business requiring new skills that many departments did not have and were not eager they were natural fit for new based shells that promised put application development into the hands end users and until that point the primary development environment for expert systems had been high end lisp machines from xerox symbolics and texas instruments with the rise the and client server computing vendors such intellicorp and inference corporation shifted their priorities developing based addition new vendors often financed venture capital started appearing these new vendors included aion neuron data exsys and many the and beyond the term expert and the idea standalone system mostly dropped from the there are two interpretations one that expert systems the world moved because expert systems deliver their over hyped the other the mirror that expert systems were simply victims their professionals grasped concepts such rule engines such tools migrated from standalone tools for the development special purpose expert systems one more tool that professional has their many the leading major business application suite vendors such sap siebel and oracle integrated expert system capabilities into their suite products way specifying business rule engines are longer simply for defining the rules expert would use but for any type volatile and critical business they often hand hand with business process automation and integration software architecture expert system example knowledge based system expert systems were the first commercial systems use based based system essentially composed two the knowledge base and the inference engine the knowledge base represents facts about the early expert systems such mycin and dendral these facts were represented primarily flat assertions about later expert systems developed with commercial shells the knowledge base took more structure and utilized concepts from oriented the world was represented subclasses and instances and assertions were replaced values object the rules worked querying and asserting values the the inference engine automated reasoning system that evaluates the current state the applies relevant and then asserts new knowledge into the knowledge the inference engine may also include capabilities for that can explain user the chain reasoning used arrive particular conclusion tracing back over the firing rules that resulted the there are primarily two modes for inference forward chaining and backward chaining the different approaches are dictated whether the inference engine being driven the antecedent left hand the consequent right hand the forward chaining antecedent fires and asserts the for consider the following simple example forward chaining would assert the system and then trigger the inference would match and assert into the knowledge backward chaining bit less straight backward chaining the system looks possible conclusions and works backward see they might the system was trying determine true would find and query the knowledge base see one the early innovations expert systems shells was integrate inference engines with user this could especially powerful with backward the system needs know particular fact but can simply generate input screen and ask the user the information this could use ask the user socrates was man and then use that new information the use rules explicitly represent knowledge also enabled explanation the simple example above the system had used assert that socrates was mortal and user wished understand why socrates was mortal they could query the system and the system would look back the rules which fired cause the assertion and present those rules the user english the user asked why socrates the system would reply because all men are mortal and socrates significant area for research was the generation explanations from the knowledge base natural english rather than simply showing the more formal but less intuitive expert systems evolved many new techniques were incorporated into various types inference some the most important these truth truth maintenance systems record the dependencies base that when facts are altered dependent knowledge can altered for the system learns that socrates longer known man will revoke the assertion that socrates hypothetical hypothetical the knowledge base can divided into many possible aka this allows the inference engine explore multiple possibilities this simple the system may want explore the consequences both what will true socrates man and what will true fuzzy one the first extensions simply using rules represent knowledge was also associate probability with each not assert that socrates mortal but assert socrates may mortal with some probability simple probabilities were extended some systems with sophisticated mechanisms for uncertain reasoning and combination ontology with the addition object classes the knowledge base new type reasoning was rather than reason simply about the values the objects the system could also reason about the structure the objects this simple example man can represent object class and can redefined rule that defines the class all these types special purpose inference engines are known although they were not highly used expert systems classifiers are very powerful for unstructured volatile domains and are key technology for the internet and the emerging semantic web advantages the goal based systems make the critical information required for the system work explicit rather than traditional computer program the logic embedded code that can typically only reviewed with expert system the goal was specify the rules format that was intuitive and easily reviewed and even edited domain experts rather than the benefits this explicit knowledge representation were rapid development and ease ease maintenance the most obvious this was achieved two first removing the need write conventional code many the normal problems that can caused even small changes system could avoided with expert essentially the logical flow the program least the highest was simply given for the simply invoke the inference this also was reason for the second rapid prototyping with expert system shell was possible enter few rules and have prototype developed days rather than the months year typically associated with complex claim for expert system shells that was often made was that they removed the need for trained programmers and that experts could develop systems reality this was seldom ever while the rules for expert system were more comprehensible than typical computer code they still had formal syntax where misplaced comma other character could cause havoc with any other computer addition expert systems moved from prototypes the lab deployment the business world issues integration and maintenance became far more inevitably demands integrate with and take advantage large legacy databases and systems accomplish this integration required the same skills any other type disadvantages the most common disadvantage cited for expert systems the academic literature the knowledge acquisition problem obtaining the time domain experts for any software application always difficult but for expert systems was especially difficult because the experts were definition highly valued and constant demand the result this problem great deal research effort the later years expert systems was focused tools for knowledge help automate the process debugging and maintaining rules defined however when looking the cycle expert systems actual use other problems seem least critical knowledge these problems with expert systems were essentially the same problems any other large integration access large and performance was especially problematic for early expert systems they were built using tools that featured interpreted rather than compiled code such interpreting provides extremely powerful development environment but with cost that virtually impossible obtain the levels efficiency the fastest compiled languages the time such system and database integration were difficult for early expert systems due the fact that the tools were mostly languages and platforms that were not familiar nor welcomed most corporate programming languages such lisp and prolog and hardware platforms such lisp machines and personal result great deal effort the later stages expert system tool development were focused integration with legacy environments such cobol integration with large database and porting more standard these issues were resolved primarily the server paradigm shift pcs were gradually accepted the world legitimate platform for serious business system development and affordable minicomputer servers provided the processing power needed for applications hayes roth divides expert systems applications into categories illustrated the following note that the example applications were not the original roth table and some the example applications came along quite bit any application that not foot noted described the roth also while these categories provide intuitive framework for describing the space expert systems they are not rigid categories and some cases application may show characteristics more than one mycin dendral mortgage loan advisor hearsay was early attempt solving voice recognition through expert systems for the most part this category expert systems was not all that hearsay and all interpretation systems are essentially pattern recognition looking for patterns noisy the case hearsay recognizing phonemes audio other early examples were analyzing sonar data detect russian these kinds systems proved much more amenable neural network solution than based caduceus and mycin were medical diagnosis the user describes their symptoms the computer they would doctor and the computer returns medical dendral was tool study hypothesis formation the identification organic the general problem designing solution given set was one the most successful areas for early expert systems applied business domains such sales people configuring dec vax computers and mortgage loan application smh pal expert system for the assessment students with multiple mistral expert system for the monitoring dam safety developed the ismes gets data from automatic monitoring system and performs diagnosis the state the its first installed the ridracoli dam still operational has been installed several dams italy and abroad itaipu dam well landslides under the name and monuments under the name mistral registered trade mark cesi see also effect applications artificial intelligence knowledge engineering list emerging technologies outline artificial intelligence 