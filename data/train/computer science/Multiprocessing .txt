computer science	multiprocessing navigation search this article needs additional citations for verification please help improve this article adding citations reliable sources unsourced material may challenged and february multiprocessing the use two more central processing units within single computer the term also refers the ability system support more than one processor the ability allocate tasks between there are many variations this basic and the definition multiprocessing can vary with mostly function how cpus are defined multiple cores one die multiple dies one package multiple packages one system unit etc according some line multiprocessor computer system having two more processing units multiple each sharing main memory and order simultaneously process textbook defined multiprocessor system but noting that the processors may share some all the memory and also gave tightly coupled system synonymous the operating system level multiprocessing sometimes used refer the execution multiple concurrent processes system opposed single process any one when used with this multiprocessing sometimes contrasted with multitasking which may use just single processor but switch time slices between tasks time sharing system multiprocessing however means true parallel execution multiple processes using more than one multiprocessing necessarily mean that single process task uses more than one processor the term parallel processing generally used denote that other authors prefer refer the operating system techniques multiprogramming and reserve the term multiprocessing for the hardware aspect having more than one the remainder this article discusses multiprocessing only this hardware flynn taxonomy multiprocessors defined above are mimd machines they are normally construed tightly coupled share multiprocessors are not the entire class mimd which also contains message passing multicomputer contents pre history key topics processor symmetry instruction and data streams processor coupling tightly coupled multiprocessor system loosely coupled multiprocessor system multiprocessor communication architecture message passing shared memory flynn taxonomy sisd multiprocessing simd multiprocessing misd multiprocessing mimd multiprocessing see also references history according article byte possibly the first expression the idea multiprocessing found the words federico luigi menabrea which said about charles babbage analytical engine the machine can brought into play give several results the same which will greatly abridge the whole amount key topics processor symmetry multiprocessing system all cpus may some may reserved for special combination hardware and operating system software design considerations determine the symmetry lack given for hardware software considerations may require that only one particular cpu respond all hardware whereas all other work the system may distributed equally among execution mode code may restricted only one particular whereas mode code may executed any combination multiprocessing systems are often easier design such restrictions are but they tend less efficient than systems which all cpus are systems that treat all cpus equally are called symmetric multiprocessing systems systems where all cpus are not system resources may divided number including asymmetric multiprocessing non uniform memory access multiprocessing and clustered multiprocessing instruction and data streams the processors can used execute single sequence instructions multiple contexts single multiple data often used vector processing multiple sequences instructions single context multiple single data used for redundancy safe systems and sometimes applied describe pipelined processors hyper threading multiple sequences instructions multiple contexts multiple multiple data processor coupling tightly coupled multiprocessor system tightly coupled multiprocessor systems contain multiple cpus that are connected the bus these cpus may have access central shared memory smp uma may participate memory hierarchy with both local and shared memory numa the ibm regatta example high end smp intel xeon processors dominated the multiprocessor market for business pcs and were the only major option until the release amd opteron range processors both ranges processors had their own onboard cache but provided access shared the xeon processors via common pipe and the opteron processors via independent pathways the system ram chip also known multi core computing involves more than one processor placed single chip and can thought the most extreme form coupled mainframe systems with multiple processors are often loosely coupled multiprocessor system loosely coupled multiprocessor systems often referred clusters are based multiple standalone single dual processor commodity computers interconnected via high speed communication system gigabit ethernet linux beowulf cluster example loosely coupled system tightly coupled systems perform better and are physically smaller than coupled but have historically required greater initial investments and may depreciate rapidly nodes loosely coupled system are usually inexpensive commodity computers and can recycled independent machines upon retirement from the power consumption also tightly coupled systems tend much more energy efficient than this because considerable economy can realized designing components work together from the beginning tightly coupled whereas loosely coupled systems use components that were not necessarily intended specifically for use such loosely coupled systems have the ability run different operating systems versions different multiprocessor communication architecture message passing separate address space for each processors communicate via message processors have provide focus attention costly local shared memory processors communicate with shared address space processors communicate memory write easy scale machines lower latency smp numa architecture taxonomy this article duplicates whole the scope other flynn taxonomy please discuss this issue the talk page and conform with wikipedia manual style replacing the section with link and summary the repeated spinning off the repeated text into article its own flynn taxonomy sisd misd simd mimd sisd multiprocessing sisd single instruction single data stream computer one processor sequentially processes each instruction processes one data one example the von architecture with simd multiprocessing simd single instruction multiple data stream computer one processor handles stream each one which can perform calculations parallel multiple data simd multiprocessing well suited parallel vector processing which very large set data can divided into parts that are individually subjected identical but independent single instruction stream directs the operation multiple processing units perform the same manipulations simultaneously potentially large amounts for certain types computing this type architecture can produce enormous increases terms the elapsed time required complete given however drawback this architecture that large part the system falls idle when programs system tasks are executed that cannot divided into units that can processed additionally programs must carefully and specially written take maximum advantage the and often special optimizing compilers designed produce code specifically for this environment must some compilers this category provide special constructs extensions allow programmers directly specify operations performed parallel for all statements the version fortran used the illiac which was simd multiprocessing supercomputer simd multiprocessing finds wide use certain domains such computer simulation but little use purpose desktop and business computing citation needed misd multiprocessing misd misd multiprocessing offers mainly the advantage since multiple processing units perform the same tasks the same reducing the chances incorrect results one the units misd architectures may involve comparisons between processing units detect apart from the redundant and safe character this type has few and very does not improve can implemented way that transparent used array processors and implemented fault tolerant another example misd pipelined image processing where every image pixel piped through several hardware units performing several steps image mimd multiprocessing mimd mimd multiprocessing architecture suitable for wide variety tasks which completely independent and parallel execution instructions touching different sets data can put productive for this and because easy mimd predominates processing divided into multiple threads each with its own hardware processor within single defined process within multiple insofar system has multiple threads awaiting dispatch either system user this architecture makes good use hardware mimd does raise issues deadlock and resource however since threads may collide their access resources unpredictable way that difficult manage mimd requires special coding the operating system computer but does not require application changes unless the programs themselves use multiple threads mimd transparent threaded programs under most operating the programs not voluntarily relinquish control the both system and user software may need use software constructs such semaphores also called locks gates prevent one thread from interfering with another they should happen cross paths referencing the same this gating locking process increases code lowers and greatly increases the amount testing although not usually enough negate the advantages similar conflicts can arise the hardware level between processors cache contention and for and must usually resolved with combination software and hardware cache clear see also symmetric multiprocessing asymmetric multiprocessing core processor bmdfm binary modular dataflow smp mimd runtime environment software lockout openhmpp 