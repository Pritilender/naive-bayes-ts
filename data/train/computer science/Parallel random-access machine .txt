computer science	parallel access machine parallel random access machine navigation search computer science parallel access machine pram shared memory abstract machine its name the pram was intended the computing analogy the random access machine the same way that the ram used algorithm designers model algorithmic performance such time the pram used algorithm designers model parallel algorithmic performance such time where the number processors assumed typically also similar the way which the ram model neglects practical such access time cache memory versus main the pram model neglects such issues synchronization and communication but provides any number algorithm for estimated using two parameters and time processor contents read write conflicts implementation example code see also external links references write conflicts read write conflicts accessing the same shared memory location simultaneously are resolved one the following exclusive read exclusive write every memory cell can read written only one processor time concurrent read exclusive write multiple processors can read memory cell but only one can write time exclusive read concurrent write never considered concurrent read concurrent write multiple processors can read and crcw pram sometimes called concurrent access machine here and stand for and respectively the read causes discrepancies while the concurrent write further defined common arbitrary priority array reduction several simplifying assumptions are made while considering the development algorithms for they there limit the number processors the any memory location uniformly accessible from any there limit the amount shared memory the resource contention the programs written these machines type simd these kinds algorithms are useful for understanding the exploitation dividing the original problem into similar problems and solving them implementation pram algorithms cannot parallelized with the combination cpu and dynamic access memory because dram does not allow concurrent but they can implemented hardware write the internal static access memory blocks field programmable gate array can done using crcw however the test for practical relevance pram algorithms depends whether their cost model provides effective abstraction some the structure that computer can quite different than the abstract the knowledge the layers software and hardware that need inserted beyond the scope this but articles such vishkin demonstrate how like abstraction can supported the explicit threading paradigm and articles such caragea vishkin demonstrate that pram algorithm for the maximum flow problem can provide strong speedups relative the fastest serial program for the same example code this example systemverilog code which finds the maximum value the array only clock compares all the combinations the elements the array the first and merges the result the second uses crcw and are written the concurrency causes conflicts because the algorithm guarantees that the same value written the same this code can run fpga hardware module parameter int input bit input bit data output bit typedef enum bit state bit int always posedge negedge begin begin for state end else begin case state begin for begin for begin data data end end state end begin for begin data end state end endcase end end endmodule see also flynn taxonomy free and free algorithms access machine xmtc external links saarland prototype pram university chip prototype this prototype seeks put many parallel processors and the fabric for connecting them single chip pram like programming software release 