computer science
procedural programming navigation search procedural generation this article needs additional citations for verification please help improve this article adding citations reliable sources unsourced material may challenged and april programming paradigms action oriented oriented based concurrent computing relativistic programming driven declarative imperative constraint dataflow flow based oriented spreadsheets reactive functional functional logic logic abductive logic answer set constraint logic functional logic inductive logic user programming driven service oriented driven oriented oriented level value level generic imperative declarative language oriented natural language programming specific specific oriented dialecting intentional metaprogramming automatic reflective attribute oriented homoiconic template policy based structured structured array nondeterministic parallel computing process oriented free style concatenative semantic structured non structured block structured modular monolithic object oriented separation concerns aspect oriented oriented oriented based based recursive level function level probabilistic concept procedural programming programming paradigm derived from structured programming based upon the concept the procedure call procedures also known subroutines methods functions not confused with mathematical but similar those used functional programming simply contain series computational steps carried any given procedure might called any point during including other procedures procedural programming list set instructions telling computer what step step and how perform from the first code the second procedural programming languages include fortran pascal and basic contents procedures and modularity comparison with imperative programming comparison with oriented programming comparison with functional programming comparison with logic programming see also references external links procedures and modularity modular programming modularity generally especially complicated inputs are usually specified syntactically the form arguments and the outputs delivered return values scoping another technique that helps keep procedures strongly prevents the procedure from accessing the variables other procedures and including previous instances without explicit less modular often used small quickly written tend interact with large number variables the execution environment which other procedures might also because the ability specify simple and procedures are convenient vehicle for making pieces code written different people different including through programming libraries comparison with imperative programming procedural programming languages are also imperative languages because they make explicit references the state the execution this could anything from variables which may correspond processor registers something like the position the turtle the logo programming language comparison with oriented programming the focus procedural programming break down programming task into collection variables data structures and subroutines whereas object oriented programming break down programming task into objects that expose behavior and data members using the most important distinction that while procedural programming uses procedures operate data object oriented programming bundles the two object which instance operates its own data nomenclature varies between the although they have similar record see algorithms data structures programs comparison with functional programming the principles modularity and code reuse practical functional languages are fundamentally the same procedural since they both stem from structured programming for procedures correspond both allow the reuse the same code various parts the and various points its the same procedure calls correspond function functions and their invocations are modularly separated from each other the same the use function return values and variable the main difference between the styles that functional programming languages remove least deemphasize the imperative elements procedural the feature set functional languages therefore designed support writing programs much possible terms pure whereas procedural languages model execution the program sequence imperative commands that may implicitly alter shared functional programming languages model execution the evaluation complex expressions that only depend each other terms arguments and return for this functional programs can have freer order code and the languages may offer little control over the order which various parts the program are for the arguments procedure invocation scheme are executed arbitrary functional programming languages support and heavily first class functions anonymous functions and closures functional programming languages tend rely tail call optimization and higher order functions instead imperative looping many functional however are fact impurely functional and offer procedural constructs that allow the programmer write programs procedural combination both common for input output code functional languages written procedural there exist few esoteric functional languages like unlambda that eschew structured programming precepts for the sake being difficult program and therefore these languages are the exception the common ground between procedural and functional comparison with logic programming logic programming program set and computation performed attempting prove candidate from this point logic programs are declarative focusing what the problem rather than how solve however the backward reasoning technique implemented sld resolution used solve problems logic programming languages such prolog treats programs reduction thus clauses the have dual both procedures and logical experienced logic programmers use the procedural interpretation write programs that are effective and and they use the declarative interpretation help ensure that programs are see also comparison programming paradigms declarative programming functional programming imperative programming logic programming oriented programming programming paradigms programming language structured programming sql procedural extensions 