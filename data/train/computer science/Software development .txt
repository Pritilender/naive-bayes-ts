computer science	software development navigation search software development software development process software developer requirements specification architecture construction design testing debugging deployment maintenance methodologies waterfall prototype model incremental iterative model spiral scrum cleanroom rad dsdm agile lean dual vee model tdd bdd fdd ddd mdd configuration management documentation quality assurance project management user experience tools compiler debugger profiler gui designer modeling ide build automation software development the computer programming documenting testing and bug fixing involved creating and maintaining applications and frameworks involved software release life cycle and resulting software product the term refers process writing and maintaining the source code but broader sense the term includes all that involved between the conception the desired software through the final manifestation the ideally planned and structured process therefore software development may include new prototyping modification reuse maintenance any other activities that result software software can developed for variety the three most common being meet specific needs specific business the case with custom software meet perceived need some set potential users the case with commercial and open source software for personal use scientist may write software automate mundane embedded software development that the development embedded software such used for controlling consumer requires the development process integrated with the development the controlled physical the need for better quality control the software development process has given rise the discipline software engineering which aims apply the systematic approach exemplified the engineering paradigm the process software contents overview consistency software software development topic marketing software development methodology how develop software see also references further reading overview this section does not cite any references sources please help improve this section adding citations reliable sources unsourced material may challenged and removed august there are several different approaches software some take more engineering based approach developing business whereas others may take more incremental where software evolves developed most software share some combination the following stages software analyzing the problem market research gathering requirements for the proposed business solution devising plan design for the based solution implementation the software testing the software deployment maintenance and bug fixing these stages are often referred collectively the software development lifecycle different approaches software development may carry out these stages different devote more less time different the level detail the documentation produced each stage software development may also these stages may also carried out turn based they may repeated over various cycles iterations more extreme approach the more extreme approach usually involves less time spent planning and and more time spent coding and development automated more approaches also promote continuous testing throughout the development well having working product all more structured waterfall based approaches attempt assess the majority risks and develop detailed plan for the software before implementation begins and avoid significant design changes and coding later stages the software development life cycle there are significant advantages and disadvantages the various and the best approach solving problem using software will often depend the type the problem well understood and solution can effectively planned out ahead the more waterfall based approach may work the the other the problem unique least the development and the structure the software solution cannot easily then more extreme incremental approach may work software development process structure imposed the development software synonyms include software life cycle and software process there are several models for such each describing approaches variety tasks activities that take place during the consistency software order ensure that software can evolve way that maintains its inherent one must ensure that the different dimensions evolve together consistent software has too many dimensions combine within single good mechanism should not geared specific problem such ensuring the consistency unified modeling language class diagram with the source instead should flexible enough handle the broad range dimensions that are actually involved software software development topic marketing the sources ideas for software products are these ideas can come from market research including the demographics potential new existing sales prospects who rejected the other internal software development creative third ideas for software products are usually first evaluated marketing personnel for economic for fit with existing channels for possible effects existing product required features and for fit with the marketing marketing evaluation the cost and time assumptions become decision reached early the first phase based the more detailed information generated the marketing and development the project should pursued the book great software alan davis states the chapter requirements subchapter the missing piece software students engineering learn engineering and are rarely exposed finance students marketing learn marketing and are rarely exposed finance most become specialists just one complicate few meet interdisciplinary people the there are few roles yet software product planning critical the development success and absolutely requires knowledge multiple because software development may involve compromising going beyond what required the software development project may stray into less technical concerns such human resources risk management intellectual property budgeting crisis management etc these processes may also cause the role business development overlap with software software development methodology software development methodology framework that used structure plan and control the process developing information systems wide variety such frameworks have evolved over the each with its own recognized strengths and one system development methodology not necessarily suitable for use all each the available methodologies best suited specific kinds based various organizational project and team how develop software software development can divided into two applications development and systems development potential software developer can start deciding his her focus before embarking this career with adequate programming knowledge and product that caters the audience needs can see also aspect oriented software development bachelor science information technology bus factor capability maturity model computer programmer consulting software engineer custom software functional specification incremental funding methodology marketing strategies for product software offshore software development search based software engineering oriented modeling framework software blueprint software design software developer software development effort estimation software development process software engineer software industry software project management software publisher user experience video game development web application development web engineering 